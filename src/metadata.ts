/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/user/entities/user.entity"]: await import("./modules/user/entities/user.entity"),
        ["./constants/provider.constant"]: await import("./constants/provider.constant"),
        ["./constants/role.constant"]: await import("./constants/role.constant"),
        ["./modules/auth/entities/refresh-token.entity"]: await import("./modules/auth/entities/refresh-token.entity"),
        ["./modules/user/entities/profile.entity"]: await import("./modules/user/entities/profile.entity"),
        ["./modules/category/entities/category.entity"]: await import("./modules/category/entities/category.entity"),
        ["./modules/product-attribute/entites/product-attribute.entity"]: await import("./modules/product-attribute/entites/product-attribute.entity"),
        ["./modules/product/entities/product-image.entity"]: await import("./modules/product/entities/product-image.entity"),
        ["./modules/product/entities/product-attribute-value.entity"]: await import("./modules/product/entities/product-attribute-value.entity"),
        ["./modules/product-attribute/entites/product-attribute-option.entity"]: await import("./modules/product-attribute/entites/product-attribute-option.entity"),
        ["./modules/product/entities/product.entity"]: await import("./modules/product/entities/product.entity"),
        ["./constants/input-type.constant"]: await import("./constants/input-type.constant"),
        ["./modules/product-attribute/product-attribute.dto"]: await import("./modules/product-attribute/product-attribute.dto"),
        ["./modules/product/dto/product-attribute-value.dto"]: await import("./modules/product/dto/product-attribute-value.dto"),
        ["./modules/product/dto/product-image.dto"]: await import("./modules/product/dto/product-image.dto"),
        ["./modules/auth/interfaces/auth.interface"]: await import("./modules/auth/interfaces/auth.interface"),
        ["./modules/product-attribute-group/entities/product-attribute-group.entity"]: await import("./modules/product-attribute-group/entities/product-attribute-group.entity"),
        ["./modules/product/interfaces/product.interface"]: await import("./modules/product/interfaces/product.interface")
    };
    return { "@nestjs/swagger": { "models": [[import("./common/entity/common.entity"), { "CommonEntity": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } }, "CommonEntityUUID": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } } }], [import("./modules/user/entities/profile.entity"), { "Profile": { fullName: { required: true, type: () => String }, avatarUrl: { required: false, type: () => String }, gender: { required: true, type: () => Number }, birthday: { required: false, type: () => Date }, user: { required: true, type: () => t["./modules/user/entities/user.entity"].User } } }], [import("./modules/auth/entities/refresh-token.entity"), { "RefreshToken": { id: { required: true, type: () => String }, value: { required: true, type: () => String }, expiredAt: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, user: { required: true, type: () => t["./modules/user/entities/user.entity"].User } } }], [import("./modules/user/entities/user.entity"), { "User": { email: { required: false, type: () => String }, phone: { required: false, type: () => String }, password: { required: false, type: () => String }, provider: { required: false, enum: t["./constants/provider.constant"].ProviderType }, isActived: { required: true, type: () => Boolean }, role: { required: true, enum: t["./constants/role.constant"].RoleType }, refreshTokens: { required: true, type: () => [t["./modules/auth/entities/refresh-token.entity"].RefreshToken] }, profile: { required: true, type: () => t["./modules/user/entities/profile.entity"].Profile } } }], [import("./modules/user/dto/user.dto"), { "UserDto": { email: { required: false, type: () => String }, fullName: { required: true, type: () => String }, avatarUrl: { required: false, type: () => String }, phone: { required: false, type: () => String }, provider: { required: false, type: () => Object }, password: { required: false, type: () => String }, isActived: { required: false, type: () => Boolean } }, "UserExistDto": { email: { required: true, type: () => String } } }], [import("./modules/auth/dto/auth.dto"), { "AuthGoogleDto": { code: { required: true, type: () => String } }, "LoginDto": { credential: { required: true, type: () => String }, password: { required: true, type: () => String } }, "SignUpDto": { email: { required: true, type: () => String, format: "email" }, fullName: { required: true, type: () => String }, password: { required: true, type: () => String } }, "SendEmailCodeDto": { email: { required: true, type: () => String, format: "email" } }, "VerifyEmailCodeDto": { email: { required: true, type: () => String, format: "email" }, code: { required: true, type: () => String } }, "LogoutDto": { refreshToken: { required: true, type: () => String } }, "RefreshTokenDto": {} }], [import("./modules/category/entities/category.entity"), { "Category": { name: { required: true, type: () => String }, orderNo: { required: true, type: () => Number }, slug: { required: true, type: () => String }, imageUrl: { required: false, type: () => String }, mpath: { required: false, type: () => String }, children: { required: true, type: () => [t["./modules/category/entities/category.entity"].Category] }, parentId: { required: true, type: () => Number }, parent: { required: true, type: () => t["./modules/category/entities/category.entity"].Category } } }], [import("./modules/category/dto/category.dto"), { "CategoryDto": { name: { required: true, type: () => String }, imageUrl: { required: false, type: () => String }, parentId: { required: false, type: () => Number }, orderNo: { required: false, type: () => Number, minimum: 0 }, slug: { required: false, type: () => String } }, "CategoryQueryDto": { name: { required: false, type: () => String, description: "T\u00EAn danh m\u1EE5c" } } }], [import("./modules/product/entities/product-image.entity"), { "ProductImage": { url: { required: true, type: () => String }, key: { required: true, type: () => String }, orderNo: { required: true, type: () => Number } } }], [import("./modules/product-attribute/entites/product-attribute-option.entity"), { "ProductAttributeOption": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, orderNo: { required: true, type: () => Number }, attribute: { required: true, type: () => t["./modules/product-attribute/entites/product-attribute.entity"].ProductAttribute } } }], [import("./modules/product/entities/product.entity"), { "Product": { name: { required: true, type: () => String }, slug: { required: true, type: () => String }, thumbnailUrl: { required: true, type: () => String }, description: { required: true, type: () => String }, highlightFeatures: { required: true, type: () => String }, productState: { required: false, type: () => String }, includedAccessories: { required: false, type: () => String }, warrantyInformation: { required: false, type: () => String }, taxVat: { required: false, type: () => Boolean }, secondaryName: { required: false, type: () => String }, relatedName: { required: false, type: () => String }, stock: { required: true, type: () => Number }, quantitySold: { required: true, type: () => Number }, price: { required: true, type: () => Number }, originalPrice: { required: true, type: () => Number }, ratingSum: { required: true, type: () => Number }, reviewCount: { required: true, type: () => Number }, isActived: { required: true, type: () => Boolean }, categories: { required: true, type: () => [t["./modules/category/entities/category.entity"].Category] }, images: { required: true, type: () => [t["./modules/product/entities/product-image.entity"].ProductImage] }, attributes: { required: true, type: () => [t["./modules/product/entities/product-attribute-value.entity"].ProductAttributeValue] }, attributeValueOptions: { required: true, type: () => [t["./modules/product-attribute/entites/product-attribute-option.entity"].ProductAttributeOption] } } }], [import("./modules/product/entities/product-attribute-value.entity"), { "ProductAttributeValue": { value: { required: true, type: () => String }, productId: { required: true, type: () => Number }, attributeId: { required: true, type: () => Number }, product: { required: true, type: () => t["./modules/product/entities/product.entity"].Product }, attribute: { required: true, type: () => t["./modules/product-attribute/entites/product-attribute.entity"].ProductAttribute } } }], [import("./modules/product-attribute/entites/product-attribute.entity"), { "ProductAttribute": { key: { required: true, type: () => String }, name: { required: true, type: () => String }, orderNo: { required: true, type: () => Number }, isSelected: { required: true, type: () => Boolean }, isDisplay: { required: true, type: () => Boolean }, isKeySelling: { required: true, type: () => Boolean }, isFilter: { required: true, type: () => Boolean }, isRequired: { required: true, type: () => Boolean }, inputType: { required: true, enum: t["./constants/input-type.constant"].InputType }, description: { required: true, type: () => String }, attributeOptions: { required: false, type: () => [t["./modules/product-attribute/entites/product-attribute-option.entity"].ProductAttributeOption] } } }], [import("./modules/product-attribute-group/entities/product-attribute-group.entity"), { "ProductAttributeGroup": { name: { required: true, type: () => String }, orderNo: { required: true, type: () => Number }, isFilter: { required: true, type: () => Boolean }, attributes: { required: true, type: () => [t["./modules/product-attribute/entites/product-attribute.entity"].ProductAttribute] } } }], [import("./modules/product-attribute-group/product-attribute-group.dto"), { "ProductAttributeGroupDto": { name: { required: true, type: () => String, description: "T\u00EAn nh\u00F3m thu\u1ED9c t\u00EDnh", example: "B\u1ED9 x\u1EED l\u00FD & \u0110\u1ED3 h\u1ECDa" }, orderNo: { required: false, type: () => Number, minimum: 0 }, isFilter: { required: false, type: () => Boolean }, categoryIds: { required: true, type: () => [Number], minItems: 1 } } }], [import("./modules/product-attribute/product-attribute.dto"), { "ProductAttributeDto": { name: { required: true, type: () => String }, key: { required: true, type: () => String }, orderNo: { required: false, type: () => Number, minimum: 0 }, isSelected: { required: false, type: () => Boolean }, isDisplay: { required: false, type: () => Boolean }, isKeySelling: { required: false, type: () => Boolean }, isFilter: { required: false, type: () => Boolean }, isRequired: { required: false, type: () => Boolean }, inputType: { required: false, enum: t["./constants/input-type.constant"].InputType }, description: { required: false, type: () => String }, groupId: { required: false, type: () => Number }, options: { required: false, type: () => [t["./modules/product-attribute/product-attribute.dto"].ProductAttributeOptionDto] } }, "ProductAttributeOptionDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, orderNo: { required: false, type: () => Number, minimum: 0 } } }], [import("./modules/product/dto/product-attribute-value.dto"), { "ProductAttributeValueDto": { optionId: { required: true, type: () => Number }, rawValue: { required: true, type: () => String } }, "ProductAttributeDto": { attributeId: { required: true, type: () => Number }, attributeValues: { required: true, type: () => [t["./modules/product/dto/product-attribute-value.dto"].ProductAttributeValueDto] } } }], [import("./modules/product/dto/product-image.dto"), { "ProductImageDto": { url: { required: true, type: () => String }, key: { required: true, type: () => String }, orderNo: { required: false, type: () => Number } } }], [import("./modules/product/dto/product.dto"), { "ProductDto": { name: { required: true, type: () => String }, description: { required: true, type: () => String }, highlightFeatures: { required: true, type: () => String }, productState: { required: false, type: () => String }, includedAccessories: { required: false, type: () => String }, warrantyInformation: { required: false, type: () => String }, taxVat: { required: false, type: () => Boolean }, secondaryName: { required: false, type: () => String }, relatedName: { required: false, type: () => String }, stock: { required: true, type: () => Number, minimum: 0 }, price: { required: true, type: () => Number }, originalPrice: { required: false, type: () => Number }, categoryIds: { required: true, type: () => [Number], minItems: 1 }, images: { required: true, type: () => [t["./modules/product/dto/product-image.dto"].ProductImageDto], minItems: 1 }, attributes: { required: true, type: () => [t["./modules/product/dto/product-attribute-value.dto"].ProductAttributeDto], minItems: 1 } }, "GetProductAttributesDto": { categoryIds: { required: true, type: () => [Number], minItems: 1 } } }]], "controllers": [[import("./modules/auth/auth.controller"), { "AuthController": { "googleAuth": { type: t["./modules/auth/interfaces/auth.interface"].AuthToken }, "login": { type: t["./modules/auth/interfaces/auth.interface"].AuthToken }, "signUp": { type: t["./modules/auth/interfaces/auth.interface"].AuthToken }, "refreshToken": { type: t["./modules/auth/interfaces/auth.interface"].Tokens } } }], [import("./modules/user/user.controller"), { "UserController": { "checkEmailExists": { type: Object } } }], [import("./modules/auth/controllers/verification.controller"), { "VerificationController": { "sendEmailCode": {}, "verifyEmailCode": {} } }], [import("./modules/auth/controllers/account.controller"), { "AccountController": { "profile": { type: t["./modules/user/entities/user.entity"].User }, "logout": {} } }], [import("./modules/category/category.controller"), { "CategoryController": { "list": { summary: "L\u1EA5y danh s\u00E1ch danh m\u1EE5c theo c\u1EA5u tr\u00FAc c\u00E2y", type: [t["./modules/category/entities/category.entity"].Category] }, "create": { summary: "T\u1EA1o m\u1EDBi m\u1ED9t danh m\u1EE5c" }, "update": { summary: "C\u1EADp nh\u1EADt m\u1ED9t danh m\u1EE5c" }, "delete": { summary: "X\u00F3a m\u1ED9t danh m\u1EE5c" } } }], [import("./modules/product-attribute-group/product-attribute-group.controller"), { "ProductAttributeGroupController": { "getAll": { type: [t["./modules/product-attribute-group/entities/product-attribute-group.entity"].ProductAttributeGroup] }, "create": { summary: "T\u1EA1o nh\u00F3m thu\u1ED9c t\u00EDnh", description: "H\u00E0nh \u0111\u1ED9ng n\u00E0y cho ph\u00E9p t\u1EA1o m\u1ED9t nh\u00F3m thu\u1ED9c t\u00EDnh m\u1EDBi." }, "update": { summary: "C\u1EADp nh\u1EADt nh\u00F3m thu\u1ED9c t\u00EDnh", description: "H\u00E0nh \u0111\u1ED9ng n\u00E0y cho ph\u00E9p c\u1EADp nh\u1EADt m\u1ED9t nh\u00F3m thu\u1ED9c t\u00EDnh m\u1EDBi." }, "delete": { summary: "X\u00F3a nh\u00F3m thu\u1ED9c t\u00EDnh", description: "H\u00E0nh \u0111\u1ED9ng n\u00E0y cho ph\u00E9p x\u00F3a m\u1ED9t nh\u00F3m thu\u1ED9c t\u00EDnh m\u1EDBi." } } }], [import("./modules/product-attribute/product-attribute.controller"), { "ProductAttributeController": { "info": { type: t["./modules/product-attribute/entites/product-attribute.entity"].ProductAttribute }, "create": { summary: "T\u1EA1o m\u1EDBi m\u1ED9t thu\u1ED9c t\u00EDnh s\u1EA3n ph\u1EA9m" }, "update": { summary: "C\u1EADp nh\u1EADt m\u1ED9t thu\u1ED9c t\u00EDnh s\u1EA3n ph\u1EA9m" }, "delete": { summary: "X\u00F3a m\u1ED9t thu\u1ED9c t\u00EDnh s\u1EA3n ph\u1EA9m" } } }], [import("./modules/product/product.controller"), { "ProductController": { "getProductById": { summary: "L\u1EA5y th\u00F4ng tin m\u1ED9t s\u1EA3n ph\u1EA9m", type: t["./modules/product/interfaces/product.interface"].ProductBySlug }, "create": { summary: "T\u1EA1o m\u1ED9t s\u1EA3n ph\u1EA9m m\u1EDBi", description: "H\u00E0nh \u0111\u1ED9ng n\u00E0y cho ph\u00E9p t\u1EA1o m\u1ED9t s\u1EA3n ph\u1EA9m m\u1EDBi." }, "update": { summary: "C\u1EADp nh\u1EADt th\u00F4ng tin s\u1EA3n ph\u1EA9m" }, "delete": { summary: "X\u00F3a m\u1ED9t s\u1EA3n ph\u1EA9m" }, "getAttributesByCategory": { summary: "L\u1EA5y danh s\u00E1ch thu\u1ED9c t\u00EDnh s\u1EA3n ph\u1EA9m theo danh m\u1EE5c", description: "Danh s\u00E1ch ID danh m\u1EE5c \u0111\u01B0\u1EE3c g\u1EEDi l\u00EAn ph\u1EA3i l\u00E0 c\u1EE7a c\u00E1c danh m\u1EE5c c\u1EA5p cu\u1ED1i c\u00F9ng", type: [t["./modules/product-attribute-group/entities/product-attribute-group.entity"].ProductAttributeGroup] } } }], [import("./modules/upload/upload.controller"), { "UploadController": { "uploadImage": {} } }]] } };
};